<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.truck.dao.AdminMapper" >
  <resultMap id="BaseResultMap" type="com.truck.pojo.Admin" >
    <constructor >
      <idArg column="admin_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="admin_name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="password" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="email" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="phone" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="question" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="answer" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="role" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="create_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="update_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="employee_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="employee_no" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="employee_age" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="employee_address" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="position" jdbcType="VARCHAR" javaType="java.lang.String" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    admin_id, admin_name, password, email, phone, question, answer, role, create_time, 
    update_time,employee_id,employee_no,employee_age,employee_address,position
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from truck_admin
    where admin_id = #{adminId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from truck_admin
    where admin_id = #{adminId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.truck.pojo.Admin" >
    insert into truck_admin (admin_id, admin_name, password, 
      email, phone, question, 
      answer, role, create_time, 
      update_time,employee_id,employee_no,employee_age,employee_address,position)
    values (#{adminId,jdbcType=INTEGER}, #{adminName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{question,jdbcType=VARCHAR}, 
      #{answer,jdbcType=VARCHAR}, #{role,jdbcType=INTEGER}, now(),
      now(),#{employeeId},#{employeeNo},#{employeeAge},#{employeeAddress},#{position})
  </insert>
  <insert id="insertSelective" parameterType="com.truck.pojo.Admin" useGeneratedKeys="true" keyProperty="id">
    insert into truck_admin
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="adminId != null" >
        admin_id,
      </if>
      <if test="adminName != null" >
        admin_name,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="question != null" >
        question,
      </if>
      <if test="answer != null" >
        answer,
      </if>
      <if test="role != null" >
        role,
      </if>
        create_time,
        update_time,
      <if test="employeeId != null" >
        employee_id,
      </if>
      <if test="employeeNo != null" >
        employee_no,
      </if>
      <if test="employeeAge != null" >
        employee_age,
      </if>
      <if test="employeeAddress != null" >
        employee_address,
      </if>
      <if test="position != null" >
        position,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="adminId != null" >
        #{adminId,jdbcType=INTEGER},
      </if>
      <if test="adminName != null" >
        #{adminName,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="question != null" >
        #{question,jdbcType=VARCHAR},
      </if>
      <if test="answer != null" >
        #{answer,jdbcType=VARCHAR},
      </if>
      <if test="role != null" >
        #{role,jdbcType=INTEGER},
      </if>
        now(),
        now(),
      <if test="employeeId != null" >
        #{employeeId},
      </if>
      <if test="employeeNo != null" >
        #{employeeNo},
      </if>
      <if test="employeeAge != null" >
        #{employeeAge},
      </if>
      <if test="employeeAddress != null" >
        #{employeeAddress},
      </if>
      <if test="position != null" >
        #{position},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.truck.pojo.Admin" >
    update truck_admin
    <set >
      <if test="adminName != null" >
        admin_name = #{adminName,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="question != null" >
        question = #{question,jdbcType=VARCHAR},
      </if>
      <if test="answer != null" >
        answer = #{answer,jdbcType=VARCHAR},
      </if>
      <if test="role != null" >
        role = #{role,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
        update_time = now(),
      <if test="employeeId != null" >
        employee_id=#{employeeId},
      </if>
      <if test="employeeNo != null" >
        employee_no=#{employeeNo},
      </if>
      <if test="employeeAge != null" >
        employee_age=#{employeeAge},
      </if>
      <if test="employeeAddress != null" >
        employee_address=#{employeeAddress},
      </if>
      <if test="position != null" >
        position=#{position},
      </if>
    </set>
    where admin_id = #{adminId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.truck.pojo.Admin" >
    update truck_admin
    set admin_name = #{adminName,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      question = #{question,jdbcType=VARCHAR},
      answer = #{answer,jdbcType=VARCHAR},
      role = #{role,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = now(),employee_id=#{employeeId},
      employee_id=#{employeeId},employee_no=#{employeeNo},employee_age=#{employeeAge},employee_address=#{employeeAddress},position=#{position}
    where admin_id = #{adminId,jdbcType=INTEGER}
  </update>

  <select id="checkAdminName" resultType="int" parameterType="string">
    select count(1) from truck_admin where admin_name=#{adminName}
  </select>


  <select id="checkEmail" resultType="int" parameterType="string">
    select count(1) from truck_admin where email=#{email}
  </select>

  <select id="selectLogin" resultMap="BaseResultMap" parameterType="map">
    select
    <include refid="Base_Column_List"></include>
    from  truck_admin
    where admin_name=#{adminName} and password=#{password}
  </select>

  <select id="selectQuestionByAdminName" resultType="string" parameterType="string">
    select question from truck_admin where admin_name=#{adminName}
  </select>

  <select id="checkAnswer" resultType="int" parameterType="string">
    select count(1) from truck_admin
    where admin_name=#{adminName}
    and question=#{question}
    and answer=#{answer}
  </select>

  <update id="updatePasswordByAdminName" parameterType="map">
    UPDATE truck_admin
    SET password=#{passwordNew},update_time=now()
    WHERE admin_name=#{adminName}
  </update>

  <select id="checkPassword" resultType="int" parameterType="map">
    select count(1) from truck_admin
    where password=#{passwordOld}
    AND  admin_id=#{adminId}
  </select>

  <select id="checkEmailByAdminId" resultType="int" parameterType="map">
    SELECT count(1) FROM  truck_admin
    WHERE email=#{email}
    AND admin_id=#{adminId}
  </select>

  <select id="selectAllAdmin" resultMap="BaseResultMap"  >
    select
    <include refid="Base_Column_List" />
    from truck_admin
    where role=0
  </select>

  <select id="selectAllHrAdmin" resultMap="BaseResultMap"  >
    select
    <include refid="Base_Column_List" />
    from truck_admin
    where role=0
    and employee_id>0
  </select>

  <insert id="batchInsert" parameterType="list">
    insert into truck_admin (admin_id, admin_name, password,
    email, phone, question,
    answer, role, create_time,
    update_time,employee_id,employee_no,employee_age,employee_address,position)
    values
    <foreach collection="adminList" index="index" item="item" separator=",">
      (
      #{item.adminId},#{item.adminName},#{item.password},#{item.email},#{item.phone},#{item.question},#{item.answer},#{item.role},now(),now(),#{item.employeeId},#{item.employeeNo},#{item.employeeAge},#{item.employeeAddress},#{item.position}
      )
    </foreach>
  </insert>

  <select id="selectByEmployeeId" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from truck_admin
    where employee_id=#{employeeId}
  </select>


</mapper>